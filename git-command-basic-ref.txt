GIT BASICS
git init <directory>                create empty repo in speficied directory.
git clone <repo>                    clone repo located at <repo> onto local machine. (local filesystem or remote machine)
git config user.name <name>         define author name to be used for all commits in current repo. Devs commonly use "--global" to set config options for curr.user.
git add <directory>                 stage all changes in <directory> for the next commit. Replace <directory> with a <file> to change a specific file.
git commit -m "<message>"           commit tthe staged snapshot, but instead of launching a text editor, use <message> as the commit message.
git status                          list which files are staged, unstaged, and untracked.
git log                             display the entire commit history using the default format. For customization see aditional options.
git diff                            show unstaged changes between your index and working directory.


UNDOING CHANGES
git revert <commit>                 create new commit that undoes all oof the changes made in <commit>, then apply it to the current branch.
git reset <file>                    remove <file> from the staging area, but leave tthe working directory unchanged. This unstages a fil without overwriting any changes.
git clean -n                        shows which files would be removed from working directory. Use the "-f" in place of the "-n" to execute the clean.


REWRITING GIT HISTORY
git commit --amend                  replace last commit with the staged changes aand last commit combined. Use with nothing sttaged to edit the last commit's msg.
git rebase <base>                   rebase the currect branch onto <base>. <base> can be a commit ID, branch name, a tag, or a relative reference to HEAD.
git reflog                          show a log of changes to the local repository's HEAD. Add "--relative-date" to show date info or "--all" to show all refs.


GIT BRANCHES                    
git branch                          list all local branches.
git checkout -b <branch>            create a local branch and switch to it.	(-b = check it out)
git merge <branch>                  merge <branch> into the current branch.

REMOTE REPOSITORIES
git remote add <name> <url>         create a new connection to a remote repo. After adding a remote, you can use <name> as a shortcute for <url> in other commands.
git fetch <remote> <branch>         fetches a specific <branch>, from the repo. Leave off <branch> to fetch all remote refs.
git pull <remote>                   fetch the specified remote's copy of current branch and immediately merge it into the local copy.
git push <remote> <branch>          push the branch to <remote>, along with necessary commits and objects. Created named branch in the remote repo if it doesn't exist.



